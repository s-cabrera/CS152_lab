program --> epsilon 
ident --> IDENT fibonacci 
ident --> IDENT k 
ident-loop --> epsilon
declaration --> ident ident-loop COLON INTEGER
declaration-loop --> epsilon
declaration-loop --> declaration SEMICOLON declaration-loop
declaration-loop --> epsilon
ident --> IDENT k 
var --> ident 
term --> var
mult-expr --> term 
expression --> mult-expr
comp --> LTE
number --> NUMBER 1 
term --> number 
mult-expr --> term 
expression --> mult-expr
relation-expr --> expression comp expression
relation-and-expr --> relation-expr
bool-expr --> relation-and-expr
relation-expr --> L_PAREN bool-expr R_PAREN
relation-and-expr --> relation-expr
bool-expr --> relation-and-expr
number --> NUMBER 1 
term --> number 
mult-expr --> term 
expression --> mult-expr
statement --> RETURN expression
stmt-loop --> epsilon
stmt-loop --> statement SEMICOLON stmt-loop
statement --> IF bool-expr THEN stmt-loop ENDIF
ident --> IDENT fibonacci 
ident --> IDENT k 
var --> ident 
term --> var
mult-expr --> term 
expression --> mult-expr
number --> NUMBER 1 
term --> number 
mult-expr --> term 
expression --> expression SUB mult-expr 
term-loop --> expression
term --> ident L_PAREN expression R_PAREN
mult-expr --> term 
expression --> mult-expr
ident --> IDENT fibonacci 
ident --> IDENT k 
var --> ident 
term --> var
mult-expr --> term 
expression --> mult-expr
number --> NUMBER 2 
term --> number 
mult-expr --> term 
expression --> expression SUB mult-expr 
term-loop --> expression
term --> ident L_PAREN expression R_PAREN
mult-expr --> term 
expression --> expression PLUS mult-expr 
statement --> RETURN expression
stmt-loop --> epsilon
stmt-loop --> statement SEMICOLON stmt-loop
stmt-loop --> statement SEMICOLON stmt-loop
function --> FUNCTION ident SEMICOLON BEGIN_PARAMS declaration-loop END_PARAMS BEGIN_LOCALS declaration-loop END_LOCALS BEGIN_BODY stmt-loop END_BODY
program --> program function 
ident --> IDENT main 
declaration-loop --> epsilon
ident --> IDENT n 
ident-loop --> epsilon
declaration --> ident ident-loop COLON INTEGER
ident --> IDENT fib_n 
ident-loop --> epsilon
declaration --> ident ident-loop COLON INTEGER
declaration-loop --> epsilon
declaration-loop --> declaration SEMICOLON declaration-loop
declaration-loop --> declaration SEMICOLON declaration-loop
ident --> IDENT n 
var --> ident 
var-loop --> var 
statement --> READ var-loop
ident --> IDENT fib_n 
var --> ident 
ident --> IDENT fibonacci 
ident --> IDENT n 
var --> ident 
term --> var
mult-expr --> term 
expression --> mult-expr
term-loop --> expression
term --> ident L_PAREN expression R_PAREN
mult-expr --> term 
expression --> mult-expr
statement --> var ASSIGN expression 
ident --> IDENT fib_n 
var --> ident 
var-loop --> var 
statement --> WRITE var-loop
stmt-loop --> epsilon
stmt-loop --> statement SEMICOLON stmt-loop
stmt-loop --> statement SEMICOLON stmt-loop
stmt-loop --> statement SEMICOLON stmt-loop
function --> FUNCTION ident SEMICOLON BEGIN_PARAMS declaration-loop END_PARAMS BEGIN_LOCALS declaration-loop END_LOCALS BEGIN_BODY stmt-loop END_BODY
program --> program function 
